#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
–ü–æ–∑–≤–æ–ª—è—é—Ç –≤–∫–ª—é—á–∞—Ç—å/–≤—ã–∫–ª—é—á–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
"""

import sys
import datetime
from typing import Any

class DebugLogger:
    """–ö–ª–∞—Å—Å –¥–ª—è —É—Å–ª–æ–≤–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    def __init__(self):
        self.debug_enabled = False
        self.app_name = "Planfix Reminder"
    
    def set_debug_mode(self, enabled: bool):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏"""
        self.debug_enabled = enabled
        if enabled:
            self.info("üêõ –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –≤–∫–ª—é—á–µ–Ω")
        
    def _get_timestamp(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–ª—è –ª–æ–≥–æ–≤"""
        return datetime.datetime.now().strftime("%H:%M:%S")
    
    def _format_message(self, level: str, *args) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤—ã–≤–æ–¥–∞"""
        timestamp = self._get_timestamp()
        message = " ".join(str(arg) for arg in args)
        return f"[{timestamp}] {level} {message}"
    
    def debug(self, *args, **kwargs):
        """–û—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ debug —Ä–µ–∂–∏–º–µ"""
        if self.debug_enabled:
            print(self._format_message("üîç", *args), **kwargs)
    
    def info(self, *args, **kwargs):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ debug —Ä–µ–∂–∏–º–µ"""
        if self.debug_enabled:
            print(self._format_message("‚ÑπÔ∏è", *args), **kwargs)
    
    def success(self, *args, **kwargs):
        """–°–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ - –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ debug —Ä–µ–∂–∏–º–µ"""
        if self.debug_enabled:
            print(self._format_message("‚úÖ", *args), **kwargs)
    
    def warning(self, *args, **kwargs):
        """–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤—Å–µ–≥–¥–∞"""
        print(self._format_message("‚ö†Ô∏è", *args), **kwargs)
    
    def error(self, *args, **kwargs):
        """–û—à–∏–±–∫–∏ - –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤—Å–µ–≥–¥–∞"""
        print(self._format_message("‚ùå", *args), **kwargs, file=sys.stderr)
    
    def critical(self, *args, **kwargs):
        """–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ - –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤—Å–µ–≥–¥–∞"""
        print(self._format_message("üí•", *args), **kwargs, file=sys.stderr)
    
    def startup(self, *args, **kwargs):
        """–°–æ–æ–±—â–µ–Ω–∏—è –∑–∞–ø—É—Å–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤—Å–µ–≥–¥–∞"""
        print(self._format_message("üöÄ", *args), **kwargs)
    
    def user_action(self, *args, **kwargs):
        """–î–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤—Å–µ–≥–¥–∞"""
        print(self._format_message("üë§", *args), **kwargs)
    
    def separator(self, char: str = "=", length: int = 50):
        """–†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å - —Ç–æ–ª—å–∫–æ –≤ debug —Ä–µ–∂–∏–º–µ"""
        if self.debug_enabled:
            print(char * length)
    
    def header(self, text: str, char: str = "="):
        """–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ - —Ç–æ–ª—å–∫–æ –≤ debug —Ä–µ–∂–∏–º–µ"""
        if self.debug_enabled:
            self.separator(char)
            print(f" {text} ".center(50, char))
            self.separator(char)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ª–æ–≥–≥–µ—Ä–∞
logger = DebugLogger()

# –£–¥–æ–±–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
def set_debug_mode(enabled: bool):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏"""
    logger.set_debug_mode(enabled)

def debug(*args, **kwargs):
    """–û—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    logger.debug(*args, **kwargs)

def info(*args, **kwargs):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    logger.info(*args, **kwargs)

def success(*args, **kwargs):
    """–°–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ"""
    logger.success(*args, **kwargs)

def warning(*args, **kwargs):
    """–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è"""
    logger.warning(*args, **kwargs)

def error(*args, **kwargs):
    """–û—à–∏–±–∫–∏"""
    logger.error(*args, **kwargs)

def critical(*args, **kwargs):
    """–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏"""
    logger.critical(*args, **kwargs)

def startup(*args, **kwargs):
    """–°–æ–æ–±—â–µ–Ω–∏—è –∑–∞–ø—É—Å–∫–∞"""
    logger.startup(*args, **kwargs)

def user_action(*args, **kwargs):
    """–î–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    logger.user_action(*args, **kwargs)

def separator(char: str = "=", length: int = 50):
    """–†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å"""
    logger.separator(char, length)

def header(text: str, char: str = "="):
    """–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏"""
    logger.header(text, char)

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ª–æ–≥–æ–≤
def api_log(*args, **kwargs):
    """–õ–æ–≥–∏ API –æ–ø–µ—Ä–∞—Ü–∏–π"""
    logger.debug("üåê API:", *args, **kwargs)

def config_log(*args, **kwargs):
    """–õ–æ–≥–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    logger.debug("‚öôÔ∏è CONFIG:", *args, **kwargs)

def ui_log(*args, **kwargs):
    """–õ–æ–≥–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    logger.debug("üé® UI:", *args, **kwargs)

def task_log(*args, **kwargs):
    """–õ–æ–≥–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–¥–∞—á"""
    logger.debug("üìã TASKS:", *args, **kwargs)

def notification_log(*args, **kwargs):
    """–õ–æ–≥–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    logger.debug("üîî NOTIFY:", *args, **kwargs)

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è
if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    print("\n--- –†–µ–∂–∏–º –±–µ–∑ –æ—Ç–ª–∞–¥–∫–∏ ---")
    set_debug_mode(False)
    
    debug("–≠—Ç–æ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ –¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è)")
    info("–≠—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ –¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è)")
    success("–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ (–Ω–µ –¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è)")
    warning("–≠—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ (–¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è)")
    error("–≠—Ç–æ –æ—à–∏–±–∫–∞ (–¥–æ–ª–∂–Ω–∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è)")
    
    print("\n--- –†–µ–∂–∏–º —Å –æ—Ç–ª–∞–¥–∫–æ–π ---")
    set_debug_mode(True)
    
    header("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π")
    debug("–≠—Ç–æ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    info("–≠—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")  
    success("–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ")
    warning("–≠—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")
    error("–≠—Ç–æ –æ—à–∏–±–∫–∞")
    critical("–≠—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞")
    startup("–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞")
    user_action("–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    
    separator()
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –ª–æ–≥–æ–≤
    api_log("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API")
    config_log("–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    ui_log("–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    task_log("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–¥–∞—á")
    notification_log("–ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")