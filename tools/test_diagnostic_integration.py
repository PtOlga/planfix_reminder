#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –≤ –º–µ–Ω—é —Ç—Ä–µ—è
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def test_diagnostic_import():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    try:
        from diagnostic_module import run_diagnostic
        print("‚úÖ –ú–æ–¥—É–ª—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return True
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")
        return False

def test_ui_components_import():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π"""
    try:
        from ui_components import SystemTray, DIAGNOSTIC_AVAILABLE
        print("‚úÖ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        print(f"‚ÑπÔ∏è –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞: {DIAGNOSTIC_AVAILABLE}")
        return True
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {e}")
        return False

def test_tray_menu_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é —Ç—Ä–µ—è —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π"""
    try:
        from ui_components import SystemTray
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Ç—Ä–µ—è
        tray = SystemTray()
        
        # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –º–µ–Ω—é
        menu = tray.create_menu()
        print("‚úÖ –ú–µ–Ω—é —Ç—Ä–µ—è —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –º–µ–Ω—é –µ—Å—Ç—å –ø—É–Ω–∫—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        menu_items = menu.items if hasattr(menu, 'items') else []
        diagnostic_found = False
        
        for item in menu_items:
            if hasattr(item, 'text') and '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞' in str(item.text):
                diagnostic_found = True
                break
        
        if diagnostic_found:
            print("‚úÖ –ü—É–Ω–∫—Ç '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞' –Ω–∞–π–¥–µ–Ω –≤ –º–µ–Ω—é")
        else:
            print("‚ö†Ô∏è –ü—É–Ω–∫—Ç '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –º–µ–Ω—é")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é —Ç—Ä–µ—è: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –≤ –º–µ–Ω—é —Ç—Ä–µ—è")
    print("=" * 50)
    
    tests = [
        ("–ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏", test_diagnostic_import),
        ("–ò–º–ø–æ—Ä—Ç UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤", test_ui_components_import),
        ("–°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é —Ç—Ä–µ—è", test_tray_menu_creation),
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"\nüß™ {test_name}...")
        try:
            if test_func():
                passed += 1
        except Exception as e:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ '{test_name}': {e}")
    
    print("\n" + "=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞.")
        return True
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
